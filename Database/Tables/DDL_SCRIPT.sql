create table aut_roles
  ( rle_id            number        generated by default on null as identity not null
  , rle_name          varchar2(50)  not null
  , rle_description   varchar2(200)
  , rle_created_date  date          not null
  , rle_created_by    varchar2(50)  not null
  , rle_modified_date date
  , rle_modified_by   varchar2(50)  
  , primary key(rle_id)
 );

create table aut_privileges
  ( pve_id                  number                  generated by default on null as identity not null
  , pve_name                varchar2(100)           not null
  , pve_apex_page           number
  , pve_apex_component_name varchar2(255)
  , pve_read                varchar2(1) default 'N' not null
  , pve_write               varchar2(1) default 'N' not null
  , pve_created_date        date                    not null
  , pve_created_by          varchar2(50)            not null
  , pve_modified_date       date
  , pve_modified_by         varchar2(50)   
  , primary key(pve_id)
);

create table aut_users
  ( usr_id             number        generated by default on null as identity    not null
  , usr_username       varchar2(50)                                              not null
  , usr_password       varchar2(256)
  , usr_email          varchar2(100)                              
  , usr_created_date   date          default sysdate                             not null
  , usr_created_by     varchar2(50)                                              not null
  , usr_modified_date  date          default sysdate
  , usr_modified_by    varchar2(50)
  , usr_deleted        varchar2(1 char)               default 'N'                not null
  , usr_street_name    varchar2(100)                                             not null
  , usr_house_number   number                                                    not null
  , usr_latitude       number
  , usr_longitude      number
  , usr_distance       number
  , primary key(usr_id)
);

create table aut_usr_rle
  ( ure_id            number generated by default on null as identity not null
  , ure_usr_id        number                                          not null
  , ure_rle_id        number                                          not null
  , ure_valid_from    date                            default sysdate not null
  , ure_valid_until   date
  , ure_created_date  date                            default sysdate not null
  , ure_created_by    varchar2(50)                                    not null
  , ure_modified_date date
  , ure_modified_by   varchar2(50)
  , primary key(ure_id)
);

create table aut_rle_pve
  ( rpe_id            number      generated by default on null as identity not null
  , rpe_rle_id        number                      not null
  , rpe_pve_id        number                      not null
  , rpe_valid_from    date        default sysdate not null
  , rpe_valid_until   date
  , rpe_created_date  date        default sysdate not null
  , rpe_created_by    varchar2(50)                not null
  , rpe_modified_date date
  , rpe_modified_by   varchar2(50)
  , primary key(rpe_id)
);

CREATE TABLE GCS_SEASONS 
  ( SSN_ID       NUMBER           generated by default on null as identity PRIMARY KEY
  , SSN_NAME     VARCHAR2(20)
  , _IS_VERIFIED  CHAR(1)          DEFAULT 'N'     CHECK (IS_VERIFIED IN ('Y', 'N'))
);

CREATE TABLE GCS_PRODUCTS 
  ( PDT_ID              NUMBER       GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
  , PDT_VOORRAAD        NUMBER
  , SSN_ID              NUMBER       REFERENCES GCS_SEASONS(SSN_ID)
  , PDT_NAME            VARCHAR2(40)
  , PDT_CATEGORY        VARCHAR2(40)
  , PDT_PRICE           NUMBER(10,2)
  , PDT_CREATED_DATE    DATE
  , PDT_IMAGE           VARCHAR2(255)
  , PDT_CREATED_BY      VARCHAR2(50)
  , PDT_PROFIT          NUMBER(*,0)
  , PDT_INKOOP          NUMBER(*,0)
  , PDT_PROFIT_MARGIN   NUMBER
  , PDT_MODIFIED_DATE   DATE
);


CREATE TABLE GCS_STATUSES 
  ( STS_ID             NUMBER          generated by default on null as identity PRIMARY KEY
  , STS_NAAM           VARCHAR2(40)    NOT NULL
);

CREATE TABLE GCS_ORDERS_ITEMS
  ( OIM_ID             NUMBER        generated by default on null as identity PRIMARY KEY
  , ODR_ID             NUMBER        NOT NULL REFERENCES GCS_ORDERS(ODR_ID)
  , PDT_ID             NUMBER        NOT NULL REFERENCES GCS_PRODUCTS(PDT_ID)
  , OIM_QUANTITY       NUMBER        NOT NULL
  , OIM_PRICE          NUMBER(10,2)  NOT NULL
  , USR_ID             number
  , OIM_CREATED_BY     VARCHAR(50)   NOT NULL
  , OIM_PROFIT         NUMBER
);

CREATE TABLE GCS_ORDERS 
  ( ODR_ID             NUMBER        generated by default on null as identity PRIMARY KEY
  , USR_ID             NUMBER        NOT NULL REFERENCES aut_users(USR_ID)
  , ODR_CREATED_DATE   DATE          NOT NULL
  , ODR_TOTAL_PRICE    NUMBER(10,2)  NOT NULL
  , DVY_ID             NUMBER        REFERENCES GCS_DELIVERY(DVY_ID)
  , DCT_ID             NUMBER        REFERENCES GCS_DISCOUNTS(DCT_ID)
  , ODR_CREATED_BY     VARCHAR2(50)
  , ODR_STATUS         VARCHAR2(5)   DEFAULT 'NP'
  , ODR_TOTAL_PROFIT   NUMBER
);

CREATE TABLE GCS_DELIVERY 
  ( DVY_ID             NUMBER      generated by default on null as identity PRIMARY KEY
  , DVY_DATE           DATE        NOT NULL
  , DVY_ROUTE          VARCHAR2(20)
  , USR_ID             NUMBER      REFERENCES AUT_USERS(USR_ID)
  , STS_ID             NUMBER      REFERENCES GCS_STATUSES(STS_ID)
  , ODR_ID             number
);

CREATE TABLE GCS_DISCOUNTS 
  ( DCT_ID             NUMBER         generated by default on null as identity PRIMARY KEY
  , DCT_CODE           VARCHAR2(255)  NOT NULL
  , DCT_VALUE          NUMBER         NOT NULL
  , DCT_START_VALUE    DATE           NOT NULL
  , DCT_END_VALUE      DATE           NOT NULL
);

CREATE TABLE GCS_NOTIFICATION_TYPE 
  ( NTE_ID             NUMBER      PRIMARY KEY
  , NTE_TYPE           VARCHAR2(40)
);

CREATE TABLE GCS_NOTIFICATION 
  ( NTN_ID           NUMBER          generated by default on null as identity PRIMARY KEY
  , USR_ID           NUMBER          NOT NULL REFERENCES aut_users(USR_ID)
  , NTN_EMAIL        VARCHAR2(255)   NOT NULL
  , NTN_MESSAGE      VARCHAR2(255)   NOT NULL
  , NTE_ID           NUMBER          REFERENCES GCS_NOTIFICATION_TYPE(NTE_ID)
  , NTN_DATE         DATE            NOT NULL
);

CREATE TABLE GCS_AUDITLOG 
  ( ALG_ID                    NUMBER          generated by default on null as identity PRIMARY KEY
  , ALG_TABLE_NAME            VARCHAR2(100)
  , ALG_OPERATION             VARCHAR2(10)
  , ALG_CHANGED_BY            VARCHAR2(100)
  , ALG_CHANGE_DATE           DATE     DEFAULT SYSDATE
  , ALG_OLD_VALUES            CLOB
  , ALG_NEW_VALUES            CLOB 
);

CREATE TABLE GCS_MESSAGES
  ( MGS_ID             NUMBER          generated by default on null as identity PRIMARY KEY
  , MGS_NAME           VARCHAR2(100)   NOT NULL
  , MGS_EMAIL          VARCHAR2(100)   NOT NULL
  , MGS_MESSAGE        CLOB
  , MGCS_CREATED_ON    TIMESTAMP (6)   DEFAULT CURRENT_TIMESTAMP NOT NULL
  , MGS_REPLY          CLOB
  , USR_ID             NUMBER          REFERENCES aut_users(USR_ID)

);


-----------------------------alters---------------
alter table aut_privileges add 
  ( constraint aut_pve_uk1 unique (pve_name)
  , constraint aut_pve_uk2 unique (pve_name, pve_apex_page, pve_apex_component_name)
);

alter table aut_rle_pve add 
  ( constraint aut_rpe_rle_fk foreign key(rpe_rle_id) references aut_roles(rle_id)
  , constraint aut_rpe_pve_fk foreign key(rpe_pve_id) references aut_privileges(pve_id)
  , constraint aut_rpe_uk1 unique (rpe_rle_id, rpe_pve_id)
);

alter table aut_roles add 
  ( constraint aut_rle_uk1 unique (rle_name)
);

alter table aut_users add 
    ( constraint aut_usr_uk1 unique (usr_username)
    , constraint aut_usr_uk2 unique (usr_email)
);

alter table aut_usr_rle add 
  ( constraint aut_ure_usr_fk foreign key(ure_usr_id) references aut_users(usr_id)
  , constraint aut_ure_rle_fk foreign key(ure_rle_id) references aut_roles(rle_id)
  , constraint aut_ure_uk1 unique (ure_usr_id, ure_rle_id)
  );

ALTER TABLE GCS_ORDERS_ITEMS 
  ADD CONSTRAINT fk_usr_id FOREIGN KEY (usr_id) REFERENCES aut_users(usr_id);
ALTER TABLE GCS_ORDERS_ITEMS 
  ADD CONSTRAINT fk_odr_id2 FOREIGN KEY (odr_id) REFERENCES gcs_orders(odr_id);
ALTER TABLE GCS_ORDERS_ITEMS 
  ADD FOREIGN KEY ("PDT_ID") REFERENCES "GCS_PRODUCTS" ("PDT_ID") ENABLE;

ALTER TABLE GCS_DELIVERY 
  ADD CONSTRAINT fk_odr_id FOREIGN KEY (odr_id) REFERENCES GCS_ORDERS(odr_id);

ALTER TABLE GCS_PRODUCTS 
  ADD FOREIGN KEY ("SSN_ID") REFERENCES "GCS_SEASONS" ("SSN_ID");